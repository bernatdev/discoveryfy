version: '3.4'

services:
  api:
    container_name: api
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "9000:9000"
    build:
      context: ./api
#      target: api_php
    volumes:
      - ./api:/var/www:rw
#      - ./api:/var/www:rw,cached
#      - ./api/public:/var/www/html:rw
#      - ~/.docker-kikdev/logs/:/var/log/apache2/:cached
    depends_on:
      - db
      - cache
      - monitor-data
#    links:
#      - db
#      - cache
#      - monitor-data
    network_mode: "host"
#    networks:
#      - discoveryfy
    env_file:
      - ./.env
      - ./.env.local

  db:
    container_name: db
    # in production, we may want to use a managed database service
#    image: postgres:10-alpine
    image: mysql:5.7
    restart: always
    volumes:
      # use a bind-mounted host directory, because we never want to lose our data!
      #Postgresql
#      - ./api/storage/db/data:/var/lib/postgresql/data:rw
#      - ./api/storage/db/data:/var/lib/postgresql/data/pgdata:rw
#      - ./api/storage/db/data:/var/lib/postgresql:rw
#      - ./docker/db/data:/var/lib/postgresql:rw
      # Mysql
      - db_data:/var/lib/mysql
#      - ./api/storage/db/data:/var/lib/mysql
    env_file:
      - ./.env
      - ./.env.local
    ports: # <Port exposed> : < MySQL Port running inside container>
      #Postgresql
#      - "5432:5432"
      # Mysql
      - "3306:3306"
    expose: # Opens port 3306 on the container
      - '3306'
#    networks:
#      discoveryfy:
#        aliases:
#          - db

  cache:
    container_name: cache
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"

  monitor-data:
    container_name: monitor-data
    image: "influxdb:1.8-alpine"
    restart: always
    ports:
      - 8086:8086 # HTTP API port
#      - 2003:2003 # Graphite support, if it is enabled
    expose: # Opens port 8086 on the container
      - '8086'
#    build:
#      context: ./api/storage/monitor/influxdb
    volumes:
      - ./api/storage/monitor/influxdb/etc:/etc/influxdb
      - ./api/storage/monitor/influxdb/lib:/var/lib/influxdb
    env_file:
      - ./.env
      - ./.env.local

  monitor-web:
    container_name: monitor-web
    image: "grafana/grafana:7.0.1" # By default is alpine, add -ubuntu for a ubuntu based image
    restart: always
    ports:
      - 3000:3000
    expose: # Opens port 3000 on the container
      - '3000'
#    build:
#      context: ./api/storage/monitor/grafana
    volumes:
      - ./api/storage/monitor/grafana/etc:/etc/grafana:ro
      - ./api/storage/monitor/grafana/lib:/var/lib/grafana
      - ./api/storage/monitor/grafana/log:/var/log/grafana
    links:
      - monitor-data:monitor-data
    env_file:
      - ./.env
      - ./.env.local
    depends_on:
      - monitor-data

  client:
    container_name: client
    image: woahbase/alpine-quasar:x86_64
    command: dev --modern
#    command: dev -m pwa -t mat
    volumes:
      - ./client:/home/alpine/project
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/hosts:/etc/hosts:ro
    ports:
      - 8080:3000

volumes:
  db_data: {}

#networks:
#  discoveryfy:
#    external:
#      name: discoveryfy
