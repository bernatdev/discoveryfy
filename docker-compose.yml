version: '3.4'

services:
  api:
    container_name: api
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "9000:9000"
    build:
      context: ./api
#      target: api_php
    volumes:
      - ./api:/var/www:rw
#      - ./api:/var/www:rw,cached
#      - ./api/public:/var/www/html:rw
#      - ~/.docker-kikdev/logs/:/var/log/apache2/:cached
    depends_on:
      - db
#    links:
#      - db
    network_mode: "host"
#    networks:
#      - discoveryfy
    env_file:
      - ./.env
      - ./.env.local

  db:
    container_name: db
    # in production, we may want to use a managed database service
#    image: postgres:10-alpine
    image: mysql:5.7
    restart: always
    volumes:
      # use a bind-mounted host directory, because we never want to lose our data!
      #Postgresql
#      - ./api/storage/db/data:/var/lib/postgresql/data:rw
#      - ./api/storage/db/data:/var/lib/postgresql/data/pgdata:rw
#      - ./api/storage/db/data:/var/lib/postgresql:rw
#      - ./docker/db/data:/var/lib/postgresql:rw
      # Mysql
      - db_data:/var/lib/mysql
    env_file:
      - ./.env
      - ./.env.local
    ports: # <Port exposed> : < MySQL Port running inside container>
      #Postgresql
#      - "5432:5432"
      # Mysql
      - "3306:3306"
    expose: # Opens port 3306 on the container
      - '3306'
#    networks:
#      discoveryfy:
#        aliases:
#          - db

#redis?

volumes:
  db_data: {}

#networks:
#  discoveryfy:
#    external:
#      name: discoveryfy
